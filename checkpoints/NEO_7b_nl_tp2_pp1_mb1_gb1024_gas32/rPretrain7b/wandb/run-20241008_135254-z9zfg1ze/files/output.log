/data/xunjian_yin/mycode/MAP-NEO/Megatron-LM-NEO/megatron/checkpointing.py:422: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  state_dict = torch.load(checkpoint_name, map_location='cpu')
/data/xunjian_yin/miniconda3/envs/apex1/lib/python3.10/site-packages/transformer_engine/pytorch/module/base.py:407: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  state = torch.load(state, map_location='cuda')
/data/xunjian_yin/miniconda3/envs/apex1/lib/python3.10/site-packages/torch/distributed/c10d_logger.py:79: FutureWarning: `torch.distributed._all_gather_base` is a private function and will be deprecated. Please use `torch.distributed.all_gather_into_tensor` instead.
  return func(*args, **kwargs)
(min, max) time across ranks (ms):
    load-checkpoint ................................: (61125.95, 61126.51)
(min, max) time across ranks (ms):
    model-and-optimizer-setup ......................: (62305.15, 62577.46)
    train/valid/test-data-iterators-setup ..........: (109322.42, 115138.34)
/data/xunjian_yin/mycode/MAP-NEO/Megatron-LM-NEO/megatron/core/tensor_parallel/layers.py:396: FutureWarning: `torch.distributed._reduce_scatter_base` is a private function and will be deprecated. Please use `torch.distributed.reduce_scatter_tensor` instead.
  handle = torch.distributed._reduce_scatter_base(
/data/xunjian_yin/mycode/MAP-NEO/Megatron-LM-NEO/megatron/core/distributed/grad_buffer.py:104: FutureWarning: `torch.distributed._reduce_scatter_base` is a private function and will be deprecated. Please use `torch.distributed.reduce_scatter_tensor` instead.
  self.communication_handle = torch.distributed._reduce_scatter_base(
 iteration    43876/   51900 | consumed samples:     44929024 | elapsed time per iteration (ms): 48018.9 | learning rate: 3.124E-05 | global batch size:  1024 | lm loss: 1.794430E+00 | loss scale: 1.0 | grad norm: 0.065 | number of skipped iterations:   0 | number of nan iterations:   0 |
/data/xunjian_yin/mycode/MAP-NEO/Megatron-LM-NEO/megatron/training.py:533: UserWarning: The torch.cuda.*DtypeTensor constructors are no longer recommended. It's best to use methods such as torch.tensor(data, dtype=*, device='cuda') to create tensors. (Triggered internally at /opt/conda/conda-bld/pytorch_1720538438429/work/torch/csrc/tensor/python_tensor.cpp:78.)
  key, torch.cuda.FloatTensor([0.0])) + loss_dict[key]
 iteration    43877/   51900 | consumed samples:     44930048 | elapsed time per iteration (ms): 38324.5 | learning rate: 3.124E-05 | global batch size:  1024 | lm loss: 1.778669E+00 | loss scale: 1.0 | grad norm: 0.097 | number of skipped iterations:   0 | number of nan iterations:   0 |
 iteration    43878/   51900 | consumed samples:     44931072 | elapsed time per iteration (ms): 38366.4 | learning rate: 3.124E-05 | global batch size:  1024 | lm loss: 1.780319E+00 | loss scale: 1.0 | grad norm: 0.066 | number of skipped iterations:   0 | number of nan iterations:   0 |
 iteration    43879/   51900 | consumed samples:     44932096 | elapsed time per iteration (ms): 38268.2 | learning rate: 3.123E-05 | global batch size:  1024 | lm loss: 1.777713E+00 | loss scale: 1.0 | grad norm: 0.067 | number of skipped iterations:   0 | number of nan iterations:   0 |
 iteration    43880/   51900 | consumed samples:     44933120 | elapsed time per iteration (ms): 38255.7 | learning rate: 3.123E-05 | global batch size:  1024 | lm loss: 1.785451E+00 | loss scale: 1.0 | grad norm: 0.067 | number of skipped iterations:   0 | number of nan iterations:   0 |
 iteration    43881/   51900 | consumed samples:     44934144 | elapsed time per iteration (ms): 38493.9 | learning rate: 3.123E-05 | global batch size:  1024 | lm loss: 1.791544E+00 | loss scale: 1.0 | grad norm: 0.073 | number of skipped iterations:   0 | number of nan iterations:   0 |
 iteration    43882/   51900 | consumed samples:     44935168 | elapsed time per iteration (ms): 38591.4 | learning rate: 3.123E-05 | global batch size:  1024 | lm loss: 1.772890E+00 | loss scale: 1.0 | grad norm: 0.065 | number of skipped iterations:   0 | number of nan iterations:   0 |
 iteration    43883/   51900 | consumed samples:     44936192 | elapsed time per iteration (ms): 38418.7 | learning rate: 3.122E-05 | global batch size:  1024 | lm loss: 1.774117E+00 | loss scale: 1.0 | grad norm: 0.065 | number of skipped iterations:   0 | number of nan iterations:   0 |
 iteration    43884/   51900 | consumed samples:     44937216 | elapsed time per iteration (ms): 38598.2 | learning rate: 3.122E-05 | global batch size:  1024 | lm loss: 1.791046E+00 | loss scale: 1.0 | grad norm: 0.065 | number of skipped iterations:   0 | number of nan iterations:   0 |
 iteration    43885/   51900 | consumed samples:     44938240 | elapsed time per iteration (ms): 38379.0 | learning rate: 3.122E-05 | global batch size:  1024 | lm loss: 1.783865E+00 | loss scale: 1.0 | grad norm: 0.067 | number of skipped iterations:   0 | number of nan iterations:   0 |
 iteration    43886/   51900 | consumed samples:     44939264 | elapsed time per iteration (ms): 38228.6 | learning rate: 3.121E-05 | global batch size:  1024 | lm loss: 1.787920E+00 | loss scale: 1.0 | grad norm: 0.064 | number of skipped iterations:   0 | number of nan iterations:   0 |
 iteration    43887/   51900 | consumed samples:     44940288 | elapsed time per iteration (ms): 38436.4 | learning rate: 3.121E-05 | global batch size:  1024 | lm loss: 1.794210E+00 | loss scale: 1.0 | grad norm: 0.066 | number of skipped iterations:   0 | number of nan iterations:   0 |
 iteration    43888/   51900 | consumed samples:     44941312 | elapsed time per iteration (ms): 38569.3 | learning rate: 3.121E-05 | global batch size:  1024 | lm loss: 1.786012E+00 | loss scale: 1.0 | grad norm: 0.066 | number of skipped iterations:   0 | number of nan iterations:   0 |
 iteration    43889/   51900 | consumed samples:     44942336 | elapsed time per iteration (ms): 38407.1 | learning rate: 3.121E-05 | global batch size:  1024 | lm loss: 1.775443E+00 | loss scale: 1.0 | grad norm: 0.066 | number of skipped iterations:   0 | number of nan iterations:   0 |
 iteration    43890/   51900 | consumed samples:     44943360 | elapsed time per iteration (ms): 38651.8 | learning rate: 3.120E-05 | global batch size:  1024 | lm loss: 1.800025E+00 | loss scale: 1.0 | grad norm: 0.067 | number of skipped iterations:   0 | number of nan iterations:   0 |
 iteration    43891/   51900 | consumed samples:     44944384 | elapsed time per iteration (ms): 38382.2 | learning rate: 3.120E-05 | global batch size:  1024 | lm loss: 1.785325E+00 | loss scale: 1.0 | grad norm: 0.066 | number of skipped iterations:   0 | number of nan iterations:   0 |
